// <auto-generated />
using Kirkwood_Water_Department_Final_Project;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kirkwood_Water_Department_Final_Project.Migrations
{
    [DbContext(typeof(ReportsContext))]
    [Migration("20230426140025_DBCreation")]
    partial class DBCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kirkwood_Water_Department_Final_Project.Reports", b =>
                {
                    b.Property<int>("ReportNumberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportNumberId"));

                    b.Property<string>("BreakLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeWhosReporting")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisableProblem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReportNumberId");

                    b.ToTable("ReportedBreaks");

                    b.HasData(
                        new
                        {
                            ReportNumberId = 1,
                            BreakLocation = "Rose Hill Ave",
                            Name = "Tony Cook",
                            PhoneNumber = "(314) 737-9285",
                            TypeWhosReporting = "Citizen",
                            VisableProblem = "Water leaking from fire hydrant"
                        },
                        new
                        {
                            ReportNumberId = 2,
                            BreakLocation = "Lee Ave",
                            Name = "Owen Garrett",
                            PhoneNumber = "(314) 412-8142",
                            TypeWhosReporting = "Citizen",
                            VisableProblem = "Pipe Outburst on Street"
                        },
                        new
                        {
                            ReportNumberId = 3,
                            BreakLocation = "Lilian Ave",
                            Name = "Matt Pelich",
                            PhoneNumber = "(314) 182-2784",
                            TypeWhosReporting = "Kirkwood Resident",
                            VisableProblem = "No running water is in my house"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
